# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protos import grpc_chat_pb2 as protos_dot_grpc__chat__pb2


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/chat.ChatService/RegisterUser',
                request_serializer=protos_dot_grpc__chat__pb2.RegisterMessageRequest.SerializeToString,
                response_deserializer=protos_dot_grpc__chat__pb2.RegisterMessageReply.FromString,
                )
        self.LookupUser = channel.unary_unary(
                '/chat.ChatService/LookupUser',
                request_serializer=protos_dot_grpc__chat__pb2.LookupUserRequest.SerializeToString,
                response_deserializer=protos_dot_grpc__chat__pb2.LookupUserReply.FromString,
                )
        self.SendMessage = channel.unary_unary(
                '/chat.ChatService/SendMessage',
                request_serializer=protos_dot_grpc__chat__pb2.SendMessageRequest.SerializeToString,
                response_deserializer=protos_dot_grpc__chat__pb2.SendMessageReplay.FromString,
                )


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LookupUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=protos_dot_grpc__chat__pb2.RegisterMessageRequest.FromString,
                    response_serializer=protos_dot_grpc__chat__pb2.RegisterMessageReply.SerializeToString,
            ),
            'LookupUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LookupUser,
                    request_deserializer=protos_dot_grpc__chat__pb2.LookupUserRequest.FromString,
                    response_serializer=protos_dot_grpc__chat__pb2.LookupUserReply.SerializeToString,
            ),
            'SendMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendMessage,
                    request_deserializer=protos_dot_grpc__chat__pb2.SendMessageRequest.FromString,
                    response_serializer=protos_dot_grpc__chat__pb2.SendMessageReplay.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/RegisterUser',
            protos_dot_grpc__chat__pb2.RegisterMessageRequest.SerializeToString,
            protos_dot_grpc__chat__pb2.RegisterMessageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LookupUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/LookupUser',
            protos_dot_grpc__chat__pb2.LookupUserRequest.SerializeToString,
            protos_dot_grpc__chat__pb2.LookupUserReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendMessage',
            protos_dot_grpc__chat__pb2.SendMessageRequest.SerializeToString,
            protos_dot_grpc__chat__pb2.SendMessageReplay.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
